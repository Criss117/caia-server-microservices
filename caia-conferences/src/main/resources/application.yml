spring:
  config:
    import: optional:configserver:http://localhost:8888
  application:
    name: caia-conferences
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format-sql: true

  datasource:
    url: jdbc:postgresql://conferences:5435/conferences
    username: conferences
    password: conferences
  rabbitmq:
    host: localhost
    port: 5672
    username: caia
    password: caia

rabbitmq:
  queue:
    name: caia-conferences-queue
  exchange:
    name: caia.conferences.exchange
  routing:
    key: caia.conferences.routing.key

server:
  port: 8092
  servlet:
    context-path: /api/conferences

eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${random.uuid}
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
# spring:
#   config:
#     import: optional:configserver:http://localhost:8888
#   application:
#     name: caia-conferences
#   jpa:
#     database-platform: org.hibernate.dialect.PostgreSQLDialect
#     show-sql: true
#     hibernate:
#       ddl-auto: create
#     properties:
#       hibernate:
#         format-sql: true

#   datasource:
#     url: jdbc:postgresql://conferencesdb:5432/conferences
#     username: conferences
#     password: conferences
#   rabbitmq:
#     host: rabbitmq
#     port: 5672
#     username: caia
#     password: caia

# rabbitmq:
#   queue:
#     name: caia-conferences-queue
#   exchange:
#     name: caia.conferences.exchange
#   routing:
#     key: caia.conferences.routing.key

# server:
#   port: 8092
#   servlet:
#     context-path: /api/conferences

# eureka:
#   instance:
#     hostname: caia-eureka
#     instance-id: ${spring.application.name}:${random.uuid}
#     prefer-ip-address: true
#   client:
#     serviceUrl:
#       defaultZone: http://caia-eureka:8761/eureka
